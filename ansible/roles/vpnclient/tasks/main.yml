---
- name: trust wireguard repo keys
  apt_key:
    id: "{{ item }}"
    keyserver: keyserver.ubuntu.com
    state: present
  loop:
    - 648ACFD622F3D138
    - 04EE7237B7D453EC

- name: limit unstable
  copy:
    src: limit-unstable
    dest: /etc/apt/preferences.d/limit-unstable

- name: add debian unstable for wireguard
  apt_repository: 
    repo: 'deb http://deb.debian.org/debian/ unstable main' 
    state: present 
    filename: unstable
    update_cache: yes

- name: install wireguard
  apt:
    name: wireguard
    state: present
    force_apt_get: true

- name: install wireguard device
  copy:
    src: wg0.netdev
    dest: /etc/systemd/network
  register:
    wireguardDevice
#
# Highly important todo: 
# Should a new case be introduced - this will not cut it
# we need a way for ansible to manage ip adresses
#
- name: install wireguard network configuration
  copy:
    src: wg0.network
    dest: /etc/systemd/network
  register:
    wireguardNetwork

- name: restart networkd when changed
  service:
    name: systemd-networkd.service
    state: restarted
  when: wireguardDevice.changed == True or wireguardNetwork.changed == True

- name: ensure ufw is installed
  apt:
    name: ufw
    state: present
    force_apt_get: true

- name: "ufw: drop everything incoming"
  ufw:
    direction: incoming
    default: reject

- name: "ufw: accept everything outgoing"
  ufw:
    direction: outgoing
    default: allow

- name: "ufw: allow everything on wg0"
  ufw:
    direction: in
    interface: wg0
    rule: allow

- name: "ufw: allow everything on wlan0"
  ufw:
    direction: in
    interface: wlan0
    rule: allow

- name: "ufw: enable ufw"
  ufw:
    state: enabled
